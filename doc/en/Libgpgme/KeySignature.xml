<Type Name="KeySignature" FullName="Libgpgme.KeySignature">
  <TypeSignature Language="C#" Value="public class KeySignature : System.Collections.Generic.IEnumerable&lt;Libgpgme.KeySignature&gt;" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Libgpgme.KeySignature&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A class that contains information about a key signature.</summary>
    <remarks>
      <para>
Key signatures are one component of a <see cref="C:Libgpgme.Key" /> object, and validate user IDs (<see cref="C:Libgpgme.UserId" />) on the key. You can enumerate all key signatures by using the <see cref="P:Libgpgme.KeySignature.Next" /> property or the <see cref="M:Libgpgme.KeySignature.GetEnumerator()" /> method.
</para>
      <block subset="none" type="note">
        <para>
The signatures on a key are only available if the key was retrieved via a listing operation with the <see cref="F:Libgpgme.KeylistMode.Signatures" /> flag enabled (see <see cref="P:Libgpgme.Context.KeylistMode" />), because it can be expensive to retrieve all signatures of a key.
</para>
        <para>
The signature notations on a key signature are only available if the key was retrieved via a listing operation with the <see cref="F:Libgpgme.KeylistMode.SignatureNotations" /> flag enabled (see <see cref="P:Libgpgme.Context.KeylistMode" />), because it can be expensive to retrieve all signature notations.
  </para>
      </block>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The comment component of Uid, if available.</summary>
        <value>A <see cref="T:System.String" /> containing the comment component of <see cref="P:Libgpgme.KeySignature.Uid" />, if available.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public string Email { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The email component of Uid, if available.</summary>
        <value>A <see cref="T:System.String" /> containing the email component of <see cref="P:Libgpgme.KeySignature.Uid" />, if available.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the key signature is expired.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the key signature is expired.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The expiration timestamp of the key signature.</summary>
        <value>A <see cref="T:System.DateTime" /> containing the expiration timestamp of the key signature.</value>
        <remarks>Always check the <see cref="P:Libgpgme.KeySignature.IsInfinitely" /> property in order to find out whether the key signature can expire. If the signature cannot expire, <see cref="P:Libgpgme.KeySignature.Expires" /> contains an invalid value (Depending on your timezone you might see the date 1970-01-01 UTC).</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresUTC">
      <MemberSignature Language="C#" Value="public DateTime ExpiresUTC { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The expiration timestamp of the key signature in UTC.</summary>
        <value>A <see cref="T:System.DateTime" /> containing the expiration timestamp of the key signature in UTC.</value>
        <remarks>Always check the <see cref="P:Libgpgme.KeySignature.IsInfinitely" /> property in order to find out whether the key signature can expire. If the signature cannot expire, <see cref="P:Libgpgme.KeySignature.Expires" /> contains an invalid value (Depending on your timezone you might see the date 1970-01-01 UTC).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exportable">
      <MemberSignature Language="C#" Value="public bool Exportable { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the key signature is exportable.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the key signature is exportable.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Libgpgme.KeySignature&gt; GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Libgpgme.KeySignature&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalid">
      <MemberSignature Language="C#" Value="public bool Invalid { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the key signature is invalid.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the key signature is invalid.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsInfinitely">
      <MemberSignature Language="C#" Value="public bool IsInfinitely { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the key signature does not expire.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the key signature does not expire.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyId">
      <MemberSignature Language="C#" Value="public string KeyId { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The key ID of the key used to create the signature.</summary>
        <value>A <see cref="T:System.String" /> containing the key ID of the key used to create the signature in hexadecimal digits.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name component of Uid, if available.</summary>
        <value>A <see cref="T:System.String" /> containing the name component of <see cref="P:Libgpgme.KeySignature.Uid" />, if available.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Libgpgme.KeySignature Next { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.KeySignature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The next key signature object.</summary>
        <value>The next <see cref="C:Libgpgme.KeySignature" /> object in the linked list, or <see langword="null" /> if this is the last element.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Notations">
      <MemberSignature Language="C#" Value="public Libgpgme.SignatureNotation Notations { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.SignatureNotation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A linked list with the notation data and policy URLs.</summary>
        <value>A <see cref="C:Libgpgme.SignatureNotation" /> object.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
The signature notations on a key signature are only available if the key was retrieved via a listing operation with the <see cref="F:Libgpgme.KeylistMode.SignatureNotations" /> flag enabled (see <see cref="P:Libgpgme.Context.KeylistMode" />), because it can be expensive to retrieve all signature notations.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PubkeyAlgorithm">
      <MemberSignature Language="C#" Value="public Libgpgme.KeyAlgorithm PubkeyAlgorithm { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.KeyAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The public key algorithm used to create the signature.</summary>
        <value>A <see cref="T:Libgpgme.KeyAlgorithm" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Revoked">
      <MemberSignature Language="C#" Value="public bool Revoked { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that this key signature is a revocation signature.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the key signature is a revocation signature.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SigClass">
      <MemberSignature Language="C#" Value="public long SigClass { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The signature class of the key signature</summary>
        <value>A <see cref="T:System.Int64" />.</value>
        <remarks>This specifies the signature class of the key signature. The meaning is specific to the crypto engine.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public int Status { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The status of the key signature.</summary>
        <value>A <see cref="T:System.Int32" />.</value>
        <remarks>This is the status of the signature and has the same meaning as the member of the same name in a <see cref="C:Libgpgme.Signature" /> object.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public DateTime Timestamp { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The creation timestamp of the key signature.</summary>
        <value>A <see cref="T:System.DateTime" /> containing the creation timestamp of the key signature.
</value>
        <remarks>
          <block subset="none" type="note">
            <para>
A <see cref="C:Libgpgme.InvalidTimestampException" /> will be raised if the timestamp is invalid. A <see cref="C:Libgpgme.TimestampNotAvailableException" /> will be raised if the timestamp is not available.
</para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimestampUTC">
      <MemberSignature Language="C#" Value="public DateTime TimestampUTC { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The creation timestamp of the key signature in UTC.</summary>
        <value>A <see cref="T:System.DateTime" /> containing the creation timestamp of the key signature in UTC.
</value>
        <remarks>
          <block subset="none" type="note">
            <para>
A <see cref="C:Libgpgme.InvalidTimestampException" /> will be raised if the timestamp is invalid. A <see cref="C:Libgpgme.TimestampNotAvailableException" /> will be raised if the timestamp is not available.
</para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The main user ID of the key used to create the signature.</summary>
        <value>A <see cref="T:System.String" /> containing the main user ID of the key used to create this signature.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
