<Type Name="EncryptionResult" FullName="Libgpgme.EncryptionResult">
  <TypeSignature Language="C#" Value="public class EncryptionResult" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A class that contains the status result of an encryption operation.</summary>
    <remarks>
      <para>
During an encryption operation the <see cref="F:Libgpgme.EncryptFlags" /> specify whether trusted keys are required. Invalid recipients are keys that do not have a high enough validity in the keyring.
</para>

The <see cref="T:Libgpgme.EncryptionResult" /> object contains information about invalid recipients. In case of one ore more invalid recipients the plaintext might be encrypted for all valid recipients and returned (if this happens depends on the crypto engine).</remarks>
  </Docs>
  <Members>
    <Member MemberName="InvalidRecipients">
      <MemberSignature Language="C#" Value="public Libgpgme.InvalidKey InvalidRecipients { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.InvalidKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recipient keys that do not have a high enough validity in the keyring or require unsupported algorithms.</summary>
        <value>Invalid recipient keys. Is <see langword="null" /> if there were no invalid recipients.</value>
        <remarks>Contains a linked list with information about all invalid keys for which the data could not be encrypted.
</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
