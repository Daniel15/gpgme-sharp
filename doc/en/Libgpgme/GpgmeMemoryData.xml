<Type Name="GpgmeMemoryData" FullName="Libgpgme.GpgmeMemoryData">
  <TypeSignature Language="C#" Value="public sealed class GpgmeMemoryData : Libgpgme.GpgmeData" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Libgpgme.GpgmeData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Memory based data buffer.</summary>
    <remarks>Memory based data objects store all data in allocated memory.  This is convenient, but only practical for an amount of data that is a fraction of the available physical memory.  The data has to be copied from its source and to its destination, which can often be avoided by using one of the other data objects.
</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GpgmeMemoryData ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new memory based data buffer.</summary>
        <remarks>The new memory buffer is empty. The size will grow automatically.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GpgmeMemoryData (int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">A <see cref="T:System.Integer" /> with the requested data buffer size.</param>
        <summary>Creates a new memory based data buffer with the specified size.</summary>
        <remarks>The memory will be allocated by the .NET runtime environment and a pointer is passed to GPGME.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GpgmeMemoryData (string filename);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">A <see cref="T:System.String" /> containing the requested filename.</param>
        <summary>Creates a new memory based data buffer and fills it with the content of a file.</summary>
        <remarks>
          <para>
Creates a new <see cref="C:Libgpgme.GpgmeData" /> object and fills it with the content of the file <paramref name="filename" />.
</para>
          <para>
The whole file is read in at initialization time and the file is not used anymore after that. This is the only mode supported currently.  Later, there might an option causing all reads to be delayed until the data is needed, but this is not yet implemented.
</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GpgmeMemoryData (IntPtr memAddr, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memAddr" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="memAddr">A <see cref="T:System.IntPtr" /> containing the address of the allocated memory.</param>
        <param name="size">An <see cref="T:System.Integer" /> that specifies the memory size.</param>
        <summary>Creates a new memory based data buffer using the specified address. </summary>
        <remarks>
          <block subset="none" type="note">
            <para>
The data is taken from the specified buffer as needed, and the user has to ensure that the buffer remains valid for the whole life span of the data object.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GpgmeMemoryData (string filename, int offset, int length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filename">A <see cref="T:System.String" /> containing the requested filename.</param>
        <param name="offset">A <see cref="T:System.Integer" /> with the start offset to read from.</param>
        <param name="length">A <see cref="T:System.Integer" /> with the requested length.</param>
        <summary>Creates a new memory based data buffer and fills it with the content of file parts.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GpgmeMemoryData ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryAddress">
      <MemberSignature Language="C#" Value="public IntPtr MemoryAddress { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Address of the allocated memory.</summary>
        <value>A <see cref="T:System.IntPtr" /> containing a memory address.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
It contains only valid data if either the <see cref="C:Libgpgme.GpgmeMemoryData(System.Int32)" /> or <see cref="C:Libgpgme.GpgmeMemoryData(System.IntPtr,System.Int32)" /> contructor has been used.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemorySize">
      <MemberSignature Language="C#" Value="public long MemorySize { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Size of the allocated memory.</summary>
        <value>A <see cref="T:System.Int64" /> with the number of allocated bytes.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
It contains only valid data if either the <see cref="C:Libgpgme.GpgmeMemoryData(System.Int32)" /> or <see cref="C:Libgpgme.GpgmeMemoryData(System.IntPtr,System.Int32)" /> contructor has been used.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
