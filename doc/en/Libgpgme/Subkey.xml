<Type Name="Subkey" FullName="Libgpgme.Subkey">
  <TypeSignature Language="C#" Value="public class Subkey : System.Collections.Generic.IEnumerable&lt;Libgpgme.Subkey&gt;" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Libgpgme.Subkey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A class that contains information about a sub key.</summary>
    <remarks>Sub keys are one component of a <see cref="C:Libgpgme.Key" /> object. In fact, subkeys are those parts that contains the real information about the individual cryptographic keys that belong to the same key object. One <see cref="C:Libgpgme.Key" /> can contain several subkeys. The first subkey in the linked list is also called the primary key. You can enumerate all subkeys by using the <see cref="P:Libgpgme.Subkey.Next" /> property or the <see cref="M:Libgpgme.Subkey.GetEnumerator()" /> method.
</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanAuthenticate">
      <MemberSignature Language="C#" Value="public bool CanAuthenticate { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey can be used for authentication.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey can be used for authentication.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanCertify">
      <MemberSignature Language="C#" Value="public bool CanCertify { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey can be used to create key certificates.</summary>
        <value>
          <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey can be used to create key certificates.
</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey can be used for encryption.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey can be used for encryption.
</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanSign">
      <MemberSignature Language="C#" Value="public bool CanSign { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey can be used to create data signatures.</summary>
        <value>
          <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey can be used to create data signatures.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Disabled">
      <MemberSignature Language="C#" Value="public bool Disabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey has been disabled.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey is disabled.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey is expired.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey is expired.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The expiration timestamp of the subkey.</summary>
        <value>A <see cref="T:System.DateTime" /> containing the expiration timestamp of the subkey.</value>
        <remarks>Always check the <see cref="P:Libgpgme.Subkey.IsInfinitely" /> property in order to find out whether the subkey can expire. If the key cannot expire, <see cref="P:Libgpgme.Subkey.Expires" /> contains an invalid value (Depending on your timezone you might see the date 1970-01-01 UTC).</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresUTC">
      <MemberSignature Language="C#" Value="public DateTime ExpiresUTC { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The expiration timestamp of the subkey in UTC.</summary>
        <value>A <see cref="T:System.DateTime" /> containing the expiration timestamp of the subkey.</value>
        <remarks>Always check the <see cref="P:Libgpgme.Subkey.IsInfinitely" /> property in order to find out whether the subkey can expire. If the key cannot expire, <see cref="P:Libgpgme.Subkey.Expires" /> contains an invalid value (Depending on your timezone you might see the date 1970-01-01 UTC).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fingerprint">
      <MemberSignature Language="C#" Value="public string Fingerprint { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the fingerprint of the subkey.</summary>
        <value>A <see cref="T:System.String" /> containing the fingerprint of the subkey in hexadecimal digits. <see langword="null" /> if not available.
</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Libgpgme.Subkey&gt; GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Libgpgme.Subkey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalid">
      <MemberSignature Language="C#" Value="public bool Invalid { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a subkey is invalid.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey is invalid.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsInfinitely">
      <MemberSignature Language="C#" Value="public bool IsInfinitely { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a key does not expire.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the key does not expire.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsQualified">
      <MemberSignature Language="C#" Value="public bool IsQualified { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey can be used for qualified signatures.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey can be used for qualified signatures.
</value>
        <remarks>Qualified signatures according to local government regulations.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyId">
      <MemberSignature Language="C#" Value="public string KeyId { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The key ID of the subkey.</summary>
        <value>A <see cref="T:System.String" /> containing the key ID of the subkey in hexadecimal digits.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The length of the subkey.</summary>
        <value>A <see cref="T:System.Int64" /> containing the length of the subkey in bits.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Libgpgme.Subkey Next { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.Subkey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The next Subkey object in the linked list.</summary>
        <value>The next <see cref="C:Libgpgme.Subkey" /> object in the linked list, or <see langword="null" /> if this is the last element.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PubkeyAlgorithm">
      <MemberSignature Language="C#" Value="public Libgpgme.KeyAlgorithm PubkeyAlgorithm { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.KeyAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The public key algorithm supported by this subkey.</summary>
        <value>A <see cref="T:Libgpgme.KeyAlgorithm" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Revoked">
      <MemberSignature Language="C#" Value="public bool Revoked { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey has been revoked.</summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey is revoked.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Secret">
      <MemberSignature Language="C#" Value="public bool Secret { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the subkey is a secret key. </summary>
        <value>A <see cref="T:System.Boolean" /> that is <see langword="true" /> if the subkey is a secret key. </value>
        <remarks>
          <block subset="none" type="note">
            <para>
It will be <see langword="false" /> if the key is actually a stub key; i.e. a secret key operation is currently not possible (offline-key).
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public DateTime Timestamp { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The creation timestamp of the subkey.</summary>
        <value>A <see cref="T:System.DateTime" /> containing the creation timestamp of the subkey.
</value>
        <remarks>
          <block subset="none" type="note">
            <para>
A <see cref="C:Libgpgme.InvalidTimestampException" /> will be raised if the timestamp is invalid. A <see cref="C:Libgpgme.TimestampNotAvailableException" /> will be raised if the timestamp is not available.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimestampUTC">
      <MemberSignature Language="C#" Value="public DateTime TimestampUTC { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The creation timestamp of the subkey in UTC.</summary>
        <value>A <see cref="T:System.DateTime" /> containing the creation timestamp of the subkey in UTC.
</value>
        <remarks>
          <block subset="none" type="note">
            <para>
A <see cref="C:Libgpgme.InvalidTimestampException" /> will be raised if the timestamp is invalid. A <see cref="C:Libgpgme.TimestampNotAvailableException" /> will be raised if the timestamp is not available.
</para>
          </block>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
