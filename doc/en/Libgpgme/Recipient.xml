<Type Name="Recipient" FullName="Libgpgme.Recipient">
  <TypeSignature Language="C#" Value="public class Recipient : System.Collections.Generic.IEnumerable&lt;Libgpgme.Recipient&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Recipient extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class Libgpgme.Recipient&gt;, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Libgpgme.Recipient&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Information about a recipient of an encrypted text.</summary>
    <remarks>
      <para>
This is an object used to store information about the recipients of an encrypted text which is decrypted in a decryption operation. 
</para>
You can enumerate the particular recipients through the <see cref="P:Libgpgme.Recipient.Next" /> property or by using the <see cref="M:Libgpgme.Recipient.GetEnumerator()" /> method.
</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Libgpgme.Recipient&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Libgpgme.Recipient&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Libgpgme.Recipient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyAlgorithm">
      <MemberSignature Language="C#" Value="public Libgpgme.KeyAlgorithm KeyAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Libgpgme.KeyAlgorithm KeyAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.KeyAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The public key algorithm used in the encryption.</summary>
        <value>A <see cref="T:Libgpgme.KeyAlgorithm" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyId">
      <MemberSignature Language="C#" Value="public string KeyId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The key ID of a recipient.</summary>
        <value>A <see cref="T:System.String" /> containing the hexadecimal key ID.</value>
        <remarks>This is the key ID of the key (in hexadecimal digits) used as recipient.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Libgpgme.Recipient Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Libgpgme.Recipient Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.Recipient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A reference to the next recipient.</summary>
        <value>A reference to the next <see cref="C:Libgpgme.Recipient" /> object in the linked list, or <see langword="null" /> if this is the last element.
</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public int Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Error number.</summary>
        <value>An error number with the error code 17 if the secret key for this recipient is not available, and 0 otherwise.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
