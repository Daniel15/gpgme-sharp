<Type Name="PgpSubkeyOptions" FullName="Libgpgme.PgpSubkeyOptions">
  <TypeSignature Language="C#" Value="public class PgpSubkeyOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PgpSubkeyOptions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A class that contains information about a new subkey.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PgpSubkeyOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public Libgpgme.PgpSubkeyAlgorithm Algorithm;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Libgpgme.PgpSubkeyAlgorithm Algorithm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.PgpSubkeyAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The public key algorithm to be used for the new subkey.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>
You can use the <see cref="M:Libgpgme.PgpSubkeyOptions.SetAlgorithm(Libgpgme.KeyAlgorithm)" /> method as well. Make sure to set proper key capabilities by using the <see cref="P:Libgpgme.PgpSubkeyOptions.Capability" /> property.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capability">
      <MemberSignature Language="C#" Value="public Libgpgme.AlgorithmCapability Capability;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Libgpgme.AlgorithmCapability Capability" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.AlgorithmCapability</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The key capabilities of the new subkey.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExpirationDate">
      <MemberSignature Language="C#" Value="public DateTime ExpirationDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpirationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The expiration date of the new subkey.</summary>
        <value>A <see cref="T:System.DateTime" />.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
Depending on your timezone you might see the date 1970-01-01 UTC. This special date is used to mark a key to never expire.
You can unset the expiration date with the <see cref="M:Libgpgme.PgpSubkeyOptions.MakeInfinitely()" /> method. 
</para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinitely">
      <MemberSignature Language="C#" Value="public bool IsInfinitely { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInfinitely" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the new subkey does not expire.</summary>
        <value>A <see cref="T:System.Boolean" />.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
You can unset the expiration date with the <see cref="M:Libgpgme.PgpSubkeyOptions.MakeInfinitely()" /> method.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KEY_LENGTH_1024">
      <MemberSignature Language="C#" Value="public const int KEY_LENGTH_1024 = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 KEY_LENGTH_1024 = (1024)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>1024 bits key size.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KEY_LENGTH_2048">
      <MemberSignature Language="C#" Value="public const int KEY_LENGTH_2048 = 2048;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 KEY_LENGTH_2048 = (2048)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>2048 bits key size.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KEY_LENGTH_4096">
      <MemberSignature Language="C#" Value="public const int KEY_LENGTH_4096 = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 KEY_LENGTH_4096 = (4096)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>4096 bits key size.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyLength">
      <MemberSignature Language="C#" Value="public int KeyLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The new subkey's length in bits.</summary>
        <value>A <see cref="T:System.Int32" />.</value>
        <remarks>
          <para>
You can use the following constant values:
</para>
          <list type="table">
            <listheader>
              <term>Constant</term>
              <description>Description</description>
            </listheader>
            <item>
              <term>
                <see cref="F:Libgpgme.PgpSubkeyOptions.KEY_LENGTH_1024" />
              </term>
              <description>for 1024 bits key length</description>
            </item>
            <item>
              <term>
                <see cref="F:Libgpgme.PgpSubkeyOptions.KEY_LENGTH_2048" />
              </term>
              <description>for 2048 bits key length</description>
            </item>
            <item>
              <term>
                <see cref="F:Libgpgme.PgpSubkeyOptions.KEY_LENGTH_4096" />
              </term>
              <description>for 4096 bits key length</description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeInfinitely">
      <MemberSignature Language="C#" Value="public void MakeInfinitely ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeInfinitely() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the new subkey to never expire.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetAlgorithm">
      <MemberSignature Language="C#" Value="public void SetAlgorithm (Libgpgme.KeyAlgorithm algo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAlgorithm(valuetype Libgpgme.KeyAlgorithm algo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algo" Type="Libgpgme.KeyAlgorithm" />
      </Parameters>
      <Docs>
        <param name="algo">A <see cref="T:Libgpgme.KeyAlgorithm" />.</param>
        <summary>Sets the public key algorithm to be used for the new subkey.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>
You can use the <see cref="P:Libgpgme.PgpSubkeyOptions.Algorithm" /> property as well. Make sure to set proper key capabilities by using the <see cref="P:Libgpgme.PgpSubkeyOptions.Capability" /> property.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
