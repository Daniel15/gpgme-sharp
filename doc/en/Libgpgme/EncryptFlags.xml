<Type Name="EncryptFlags" FullName="Libgpgme.EncryptFlags">
  <TypeSignature Language="C#" Value="public enum EncryptFlags" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Flags that affect the encryption process.</summary>
    <remarks>The <see cref="T:Libgpgme.EncryptionResult" /> object contains information if some recipients were invalid. In this case the plaintext might be encrypted for all valid recipients and returned (if this happens depends on the crypto engine).
</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlwaysTrust">
      <MemberSignature Language="C#" Value="AlwaysTrust" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.EncryptFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that all the recipients should be trusted, even if the keys do not have a high enough validity in the keyring.  This flag should be used with care; in general it is not a good idea to use any untrusted keys.
</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.EncryptFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nothing</summary>
      </Docs>
    </Member>
  </Members>
</Type>
