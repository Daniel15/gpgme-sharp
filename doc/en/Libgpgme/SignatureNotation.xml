<Type Name="SignatureNotation" FullName="Libgpgme.SignatureNotation">
  <TypeSignature Language="C#" Value="public class SignatureNotation : System.Collections.Generic.IEnumerable&lt;Libgpgme.SignatureNotation&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignatureNotation extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class Libgpgme.SignatureNotation&gt;, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Libgpgme.SignatureNotation&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A class that is used to store information about notation data and policy URLs.</summary>
    <remarks>This class is implemented as linked list. You can enumerate all items by using the <see cref="P:Libgpgme.SignatureNotation.Next" /> property or the <see cref="M:Libgpgme.SignatureNotation.GetEnumerator()" /> method.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Critical">
      <MemberSignature Language="C#" Value="public bool Critical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Critical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the Critical-Usage bit is set. </summary>
        <value>A <see cref="T:System.Boolean" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public Libgpgme.SignatureNotationFlags Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Libgpgme.SignatureNotationFlags Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.SignatureNotationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The signature notation data flags.</summary>
        <value>A <see cref="T:Libgpgme.SignatureNotationFlags" /> value.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Libgpgme.SignatureNotation&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Libgpgme.SignatureNotation&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Libgpgme.SignatureNotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HumanReadable">
      <MemberSignature Language="C#" Value="public bool HumanReadable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HumanReadable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the string is in human-readable form.</summary>
        <value>A <see cref="T:System.Boolean" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Libgpgme.SignatureNotation Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Libgpgme.SignatureNotation Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.SignatureNotation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The next signature notation data object in the linked list.</summary>
        <value>The next <see cref="C:Libgpgme.SignatureNotation" /> object in the linked list.</value>
        <remarks>This class is implemented as linked list. You can enumerate all items by using the <see cref="P:Libgpgme.SignatureNotation.Next" /> property or the <see cref="M:Libgpgme.SignatureNotation.GetEnumerator()" /> method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
