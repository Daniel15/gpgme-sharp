<Type Name="Gpgme" FullName="Libgpgme.Gpgme">
  <TypeSignature Language="C#" Value="public sealed class Gpgme" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Gpgme extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Utility class with static methods.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Gpgme ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckVersion">
      <MemberSignature Language="C#" Value="public static string CheckVersion ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckVersion() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public static Libgpgme.Context CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Libgpgme.Context CreateContext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.Context</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new GPGME context.</summary>
        <returns>The function creates a new <see cref="C:Libgpgme.Context" /> object and returns a handle for it.
</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EngineCheckVersion">
      <MemberSignature Language="C#" Value="public static bool EngineCheckVersion (Libgpgme.Protocol proto);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EngineCheckVersion(valuetype Libgpgme.Protocol proto) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proto" Type="Libgpgme.Protocol" />
      </Parameters>
      <Docs>
        <param name="proto">A <see cref="T:Libgpgme.Protocol" /> that shall be verified.</param>
        <summary>The function verifys that the engine implementing the protocol <paramref name="proto" /> is installed in the expected path and meets the version requirement of GPGME.
</summary>
        <returns>
          <list type="table">
            <listheader>
              <term>Value</term>
              <description>Description</description>
            </listheader>
            <item>
              <term>
                <see langword="true" />
              </term>
              <description>The engine is available.</description>
            </item>
            <item>
              <term>
                <see langword="false" />
              </term>
              <description>The engine is not available.</description>
            </item>
          </list>
        </returns>
        <remarks>GPGME supports several cryptographic protocols, however, it does not implement them.  Rather it uses backends (also called engines) which implement the protocol.  GPGME uses inter-process communication to pass data back and forth between the application and the backend, but the details of the communication protocol and invocation of the backend is completely hidden by the interface.  All complexity is handled by
GPGME.  Where an exchange of information between the application and the backend is necessary, GPGME provides the necessary callback function hooks and further interfaces.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlgorithmCapability&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Libgpgme.AlgorithmCapability GetAlgorithmCapability&lt;T&gt; (T attr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Libgpgme.AlgorithmCapability GetAlgorithmCapability&lt;T&gt;(!!T attr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.AlgorithmCapability</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="attr" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="attr">To be added.</param>
        <summary>Returns the algorithm capabilities.</summary>
        <returns>Returns a <see cref="T:Libgpgme.AlgorithmCapability" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetAttrDesc&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string GetAttrDesc&lt;T&gt; (T attr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAttrDesc&lt;T&gt;(!!T attr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="attr" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="attr">To be added.</param>
        <summary>Returns the description of an element.</summary>
        <returns>Returns the description <see cref="C:System.String" /> from the <see cref="C:System.ComponentModel.DescriptionAttribute" /> of a field typeof(T).</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetEngineInfo">
      <MemberSignature Language="C#" Value="public static Libgpgme.EngineInfo GetEngineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Libgpgme.EngineInfo GetEngineInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.EngineInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The function returns engine info objects.
</summary>
        <returns>An <see cref="C:Libgpgme.EngineInfo" /> object.</returns>
        <remarks>Each info object describes the defaults of one configured backend.
<para><see cref="T:Libgpgme.EngineInfo" /> objects are linked together through the <see cref="P:Libgpgme.EngineInfo.Next" /> property. You actually receive a linked list that can be enumerated through the <see cref="M:Libgpgme.EngineInfo.GetEnumerator()" /> method.
</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgoName">
      <MemberSignature Language="C#" Value="public static string GetHashAlgoName (Libgpgme.HashAlgorithm algo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHashAlgoName(valuetype Libgpgme.HashAlgorithm algo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algo" Type="Libgpgme.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="algo">A <see cref="T:Libgpgme.HashAlgorithm" /> you want the pretty name from.</param>
        <summary>The function returns a string containing a description a hash algorithm.
</summary>
        <returns>The function returns a string containing a description of the hash algorithm <paramref name="algo" />. If <paramref name="algo" /> is not a valid hash algorithm, <see langword="null" /> is returned.</returns>
        <remarks>This string can be used to output the name of the hash algorithm to the user. Hash (message digest) algorithms are used to compress a long message to make it suitable for public key cryptography.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProtocolName">
      <MemberSignature Language="C#" Value="public static string GetProtocolName (Libgpgme.Protocol proto);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetProtocolName(valuetype Libgpgme.Protocol proto) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proto" Type="Libgpgme.Protocol" />
      </Parameters>
      <Docs>
        <param name="proto">
        </param>
        <summary>Returns a string with a printable name of the protocol used by a crypto engine.
</summary>
        <returns>Returns a string with a printable name of the protocol used by a crypto engine.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetPubkeyAlgoName">
      <MemberSignature Language="C#" Value="public static string GetPubkeyAlgoName (Libgpgme.KeyAlgorithm algo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPubkeyAlgoName(valuetype Libgpgme.KeyAlgorithm algo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algo" Type="Libgpgme.KeyAlgorithm" />
      </Parameters>
      <Docs>
        <param name="algo">A <see cref="T:Libgpgme.KeyAlgorithm" /> you want a printable name from.</param>
        <summary>The function returns a string containing a description a public key algorithm.
</summary>
        <returns>Returns a string containing a description of the public key algorithm <paramref name="algo" />.
If <paramref name="algo" /> is not a valid public key algorithm, <see langword="null" /> is returned.</returns>
        <remarks>This string can be used to output the name of the public key algorithm to the user. Public key algorithms are used for encryption, decryption, signing and verification of signatures.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrError">
      <MemberSignature Language="C#" Value="public static string GetStrError (int err);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStrError(int32 err) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="err" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="err">An <see langword="int" /> that contains the number you want the error message from.</param>
        <summary>The function returns a string containing a description of an error code.</summary>
        <returns>A <see langword="string" /> containing a description of the error code contained in the error value <paramref name="err" />.</returns>
        <remarks>This string can be used to output a diagnostic message to the user.
<block subset="none" type="note"><para>
This function is not thread safe.  Use <see cref="M:Libgpgme.Gpgme.GetStrError(System.Int32,System.String&amp;)" /> in multi-threaded programs.
  </para></block></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrError">
      <MemberSignature Language="C#" Value="public static void GetStrError (int err, out string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetStrError(int32 err, string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="err" Type="System.Int32" />
        <Parameter Name="message" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="err">An <see langword="int" /> containing the error code.</param>
        <param name="message">A <see langword="string" /> that recieves the error message.</param>
        <summary>The function returns an error description into a user supplied <see langword="string" />.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>
 This function is, in contrast to <see cref="M:Libgpgme.Gpgme.GetStrError(System.Int32)" />, thread-safe if a thread-safe strerror_r() function is provided by the system.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrSource">
      <MemberSignature Language="C#" Value="public static string GetStrSource (int err);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStrSource(int32 err) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="err" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="err">An <see langword="int" /> that contains the number you want the error source from.</param>
        <summary>The function returns a string containing a description of an error source. </summary>
        <returns>A string containing a description of the error source contained in the error value <paramref name="err" />. </returns>
        <remarks>This string can be used to output a diagnostic message to the user.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public static Libgpgme.GpgmeVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Libgpgme.GpgmeVersion Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.GpgmeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
