<Type Name="GpgmeStreamData" FullName="Libgpgme.GpgmeStreamData">
  <TypeSignature Language="C#" Value="public class GpgmeStreamData : Libgpgme.GpgmeCbsData" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Libgpgme.GpgmeCbsData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stream based data buffer.</summary>
    <remarks>The GpgmeStreamData class is inherited from the <see cref="C:Libgpgme.GpgmeCbsData" /> class.
<block subset="none" type="note"><para>
Make sure that your supplied <see cref="T:System.IO.Stream" /> object has a working implementation of the <see cref="P:System.IO.Stream.Position" /> property, otherwise GPGME's write() callback will not work.
  </para></block></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GpgmeStreamData ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new GpgmeStreamData instance.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>
Make sure that you set a proper <see cref="P:Libgpgme.GpgmeStreamData.iostream" /> property.
Your inherited class must override the following properies:

<list type="table"><listheader><term>Name</term><description>Method</description></listheader><item><term>CanRead</term><description><see cref="P:System.IO.Stream.CanRead" /></description></item><item><term>CanWrite</term><description><see cref="P:System.IO.Stream.CanWrite" /></description></item><item><term>CanSeek</term><description><see cref="P:System.IO.Stream.CanSeek" /></description></item><item><term>CanRelease</term><description><see cref="P:Libgpgme.GpgmeCbsData.CanRelease" /></description></item></list></para>
            <para>
The GPGME backend will do callbacks only for methods for which their Can* properties returned <see langword="true" /> at initialisation time.
</para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GpgmeStreamData (System.IO.Stream streamobj);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="streamobj" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="streamobj">A <see cref="C:System.IO.Stream" /> object.</param>
        <summary>Creates a new GpgmeStreamData instance based on a user-supplied <see cref="C:System.IO.Stream" />.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>
The stream should support the <see cref="P:System.IO.Stream.Position" /> property, otherwise GPGME cannot write any data to it.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GpgmeStreamData (bool canRead, bool canWrite, bool canSeek, bool canRelease);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="canRead" Type="System.Boolean" />
        <Parameter Name="canWrite" Type="System.Boolean" />
        <Parameter Name="canSeek" Type="System.Boolean" />
        <Parameter Name="canRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="canRead">If <see langword="true" />, read() callbacks from the GPGME backend will be enabled.</param>
        <param name="canWrite">If <see langword="true" />, write() callbacks from the GPGME backend will be enabled.</param>
        <param name="canSeek">If <see langword="true" />, seek() callbacks from the GPGME backend will be enabled.</param>
        <param name="canRelease">If <see langword="true" />, release() callbacks from the GPGME backend will be enabled.</param>
        <summary>Creates a new GpgmeStreamData instance.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>
Make sure that you set a proper <see cref="P:Libgpgme.GpgmeStreamData.iostream" /> property.
Your inherited class must override the following properies:

<list type="table"><listheader><term>Name</term><description>Method</description></listheader><item><term>CanRead</term><description><see cref="P:System.IO.Stream.CanRead" /></description></item><item><term>CanWrite</term><description><see cref="P:System.IO.Stream.CanWrite" /></description></item><item><term>CanSeek</term><description><see cref="P:System.IO.Stream.CanSeek" /></description></item><item><term>CanRelease</term><description><see cref="P:Libgpgme.GpgmeCbsData.CanRelease" /></description></item></list></para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="iostream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream iostream;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The origin stream object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OriginStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OriginStream { protected set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The origin stream object.</summary>
        <value>A <see cref="T:System.IO.Stream" />.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
