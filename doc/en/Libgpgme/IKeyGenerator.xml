<Type Name="IKeyGenerator" FullName="Libgpgme.IKeyGenerator">
  <TypeSignature Language="C#" Value="public interface IKeyGenerator" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>An interface that contains the basic methods needed to create new keys.</summary>
    <remarks>A KeyStore that implements <see cref="T:Libgpgme.IKeyGenerator" /> can be used to generate new keys (key pairs). </remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public Libgpgme.GenkeyResult GenerateKey (Libgpgme.Protocol protocoltype, Libgpgme.KeyParameters keyparms);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.GenkeyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocoltype" Type="Libgpgme.Protocol" />
        <Parameter Name="keyparms" Type="Libgpgme.KeyParameters" />
      </Parameters>
      <Docs>
        <param name="protocoltype">A <see cref="T:Libgpgme.Protocol" /> the specifies the type of the new key pairs.</param>
        <param name="keyparms">A <see cref="C:Libgpgme.KeyParameters" /> object.</param>
        <summary>Generates a new key.</summary>
        <returns>A <see cref="C:Libgpgme.GenkeyResult" /> object that contains information about a new generated key pairs. </returns>
        <remarks>
          <block subset="none" type="note">
            <para>
Currently only the OpenPGP protocol is supported.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
