<Type Name="EngineInfo" FullName="Libgpgme.EngineInfo">
  <TypeSignature Language="C#" Value="public class EngineInfo : System.Collections.Generic.IEnumerable&lt;Libgpgme.EngineInfo&gt;" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Libgpgme.EngineInfo&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A class that describes a crypto engine.</summary>
    <remarks>
      <para>
GPGME supports several cryptographic protocols, however, it does not implement them. Rather it uses backends (also called engines) which implement the protocol.  GPGME uses inter-process communication to pass data back and forth between the application and the backend, but the details of the communication protocol and invocation of the backend is completely hidden by the interface.  All complexity is handled by GPGME.  Where an exchange of information between the application and
the backend is necessary, GPGME provides the necessary callback function hooks and further interfaces.
</para>
      <para>
This class is implemented as linked list. You can enumerate all <see cref="C:Libgpgme.EngineInfo" /> objects by using the <see cref="P:Libgpgme.EngineInfo.Next" /> property or the <see cref="M:Libgpgme.EngineInfo.GetEnumerator()" /> method.
</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CtxValid">
      <MemberSignature Language="C#" Value="public bool CtxValid { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shows the status of the context the engine is attached to.</summary>
        <value>
          <see langword="true" /> if the attached <see cref="C:Libgpgme.Context" /> object is valid. <see langword="false" /> otherwise.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The file name of the executable of the crypto engine. </summary>
        <value>A <see cref="T:System.String" /> holding the file name of the executable of the crypto engine. 
</value>
        <remarks>Currently, <paramref name="filename" /> is never <see langword="null" />, but using <see langword="null" /> is reserved for future use, so always check before you use it.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Libgpgme.EngineInfo&gt; GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Libgpgme.EngineInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCtx">
      <MemberSignature Language="C#" Value="public bool HasCtx { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shows if the engine info has been queried from a <see cref="C:Libgpgme.Context" /> object.</summary>
        <value>A <see cref="T:System.Boolean" />.</value>
        <remarks>It is possible to query engine information without a context by using the static <see cref="M:Libgpgme.Gpgme.GetEngineInfo()" /> method. In this case <see cref="P:Libgpgme.EngineInfo.HasCtx" /> is <see langword="false" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HomeDir">
      <MemberSignature Language="C#" Value="public string HomeDir { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The directory name of the crypto engine's configuration directory.</summary>
        <value>A <see cref="T:System.String" /> holding the directory name of the crypto engine's configuration directory. <see langword="null" /> if the default directory is used.
</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Libgpgme.EngineInfo Next { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.EngineInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A reference to the next EngineInfo object.</summary>
        <value>A reference to the next <see cref="C:Libgpgme.EngineInfo" /> object in the linked list, or <see langword="null" /> if this is the last element.</value>
        <remarks>You can enumerate all <see cref="C:Libgpgme.EngineInfo" /> objects by using the <see cref="M:Libgpgme.EngineInfo.GetEnumerator()" /> method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protocol">
      <MemberSignature Language="C#" Value="public Libgpgme.Protocol Protocol { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.Protocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The protocol for which the crypto engine is used.</summary>
        <value>A <see cref="T:Libgpgme.Protocol" />.</value>
        <remarks>This is the protocol for which the crypto engine is used. You can convert this to a string with <see cref="M:Libgpgme.Gpgme.GetProtocolName(Libgpgme.Protocol)" /> for printing.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReqVersion">
      <MemberSignature Language="C#" Value="public string ReqVersion { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum required version number of the crypto engine for GPGME to work correctly.</summary>
        <value>A <see cref="T:System.String" /> containing a version number.</value>
        <remarks>This is a string containing the minimum required version number of the crypto engine for GPGME to work correctly. This is the version number that <see cref="M:Libgpgme.Gpgme.EngineCheckVersion(Libgpgme.Protocol)" /> verifies against.  Currently, it is never <see langword="null" />, but using <see langword="null" /> is reserved for future use, so always check before you use it.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The version number of the crypto engine.</summary>
        <value>A <see cref="T:System.String" /> containing the version number of the crypto engine.</value>
        <remarks>This is a string containing the version number of the crypto engine. It might be <see langword="null" /> if the version number can not be determined, for example because the executable doesn't exist or is invalid.
</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
