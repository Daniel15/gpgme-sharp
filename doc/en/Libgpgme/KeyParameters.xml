<Type Name="KeyParameters" FullName="Libgpgme.KeyParameters">
  <TypeSignature Language="C#" Value="public sealed class KeyParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KeyParameters extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A class used to store parameters for new key pairs.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new KeyParameters instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AutoKeyUsage">
      <MemberSignature Language="C#" Value="public bool AutoKeyUsage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoKeyUsage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the algorithm capabilities shall be adjusted automatically.</summary>
        <value>A <see cref="T:System.Boolean" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A key comment.</summary>
        <value>A <see cref="T:System.String" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An email address.</summary>
        <value>A <see cref="T:System.String" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExpirationDate">
      <MemberSignature Language="C#" Value="public DateTime ExpirationDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpirationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The expiration date of the key.</summary>
        <value>A <see cref="T:System.DateTime" />.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
Depending on your timezone you might see the date 1970-01-01 UTC. This special date is used to mark a key to never expire.
You can unset the expiration date with the <see cref="M:Libgpgme.KeyParameters.MakeInfinitely()" /> method. 
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinitely">
      <MemberSignature Language="C#" Value="public bool IsInfinitely { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInfinitely" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the key does not expire.</summary>
        <value>A <see cref="T:System.Boolean" />.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
You can unset the expiration date with the <see cref="M:Libgpgme.KeyParameters.MakeInfinitely()" /> method.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KEY_LENGTH_1024">
      <MemberSignature Language="C#" Value="public const int KEY_LENGTH_1024 = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 KEY_LENGTH_1024 = (1024)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>1024 bits key size.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KEY_LENGTH_2048">
      <MemberSignature Language="C#" Value="public const int KEY_LENGTH_2048 = 2048;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 KEY_LENGTH_2048 = (2048)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>2048 bits key size.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KEY_LENGTH_4096">
      <MemberSignature Language="C#" Value="public const int KEY_LENGTH_4096 = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 KEY_LENGTH_4096 = (4096)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>4096 bits key size.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyLength">
      <MemberSignature Language="C#" Value="public int KeyLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The key length in bits.</summary>
        <value>A <see cref="T:System.Int32" />.</value>
        <remarks>
          <para>
You can use the following constant values:
</para>
          <list type="table">
            <listheader>
              <term>Constant</term>
              <description>Description</description>
            </listheader>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_1024" />
              </term>
              <description>for 1024 bits key length</description>
            </item>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_2048" />
              </term>
              <description>for 2048 bits key length</description>
            </item>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_4096" />
              </term>
              <description>for 4096 bits key length</description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeInfinitely">
      <MemberSignature Language="C#" Value="public void MakeInfinitely ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeInfinitely() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the key to never expire.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="NameDN">
      <MemberSignature Language="C#" Value="public string NameDN { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameDN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name DN.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSubkey">
      <MemberSignature Language="C#" Value="public bool NoSubkey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoSubkey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if only the primary key should be created.</summary>
        <value>A <see cref="T:System.Boolean" />.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
This is only valid for OpenPGP keys.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passphrase">
      <MemberSignature Language="C#" Value="public string Passphrase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Passphrase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The passphrase of the new key.</summary>
        <value>A <see cref="T:System.String" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PubkeyAlgorithm">
      <MemberSignature Language="C#" Value="public Libgpgme.KeyAlgorithm PubkeyAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Libgpgme.KeyAlgorithm PubkeyAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.KeyAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The public key algorithm.</summary>
        <value>A <see cref="T:Libgpgme.KeyAlgorithm" />.</value>
        <remarks>
          <para>
The primary key algorithm MUST have the <see cref="F:Libgpgme.AlgorithmCapability.CanSign" /> capability. The <see cref="F:Libgpgme.AlgorithmCapability.CanCert" /> capability will be added automatically. You can modify the capabilities with the <see cref="P:Libgpgme.KeyParameters.PubkeyUsage" /> property.
</para>
          <block subset="none" type="note">
            <para>
The following public key algorithms are valid for the primary key when creating OpenPGP keys:
  </para>
            <para>
              <list type="table">
                <listheader>
                  <term>Algorithm</term>
                  <description>Description</description>
                </listheader>
                <item>
                  <term>
                    <see cref="F:Libgpgme.KeyAlgorithm.DSA" />
                  </term>
                  <description>DSA</description>
                </item>
                <item>
                  <term>
                    <see cref="F:Libgpgme.KeyAlgorithm.RSA" />
                  </term>
                  <description>RSA (you need to add the <see cref="F:Libgpgme.AlgorithmCapability.CanSign" /> capability)</description>
                </item>
              </list>
            </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PubkeyLength">
      <MemberSignature Language="C#" Value="public int PubkeyLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PubkeyLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The public key length in bits.</summary>
        <value>A <see cref="T:System.Int32" />.</value>
        <remarks>
          <para>
You can use the following constant values:
</para>
          <list type="table">
            <listheader>
              <term>Constant</term>
              <description>Description</description>
            </listheader>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_1024" />
              </term>
              <description>for 1024 bits key length</description>
            </item>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_2048" />
              </term>
              <description>for 2048 bits key length</description>
            </item>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_4096" />
              </term>
              <description>for 4096 bits key length</description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PubkeyUsage">
      <MemberSignature Language="C#" Value="public Libgpgme.AlgorithmCapability PubkeyUsage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Libgpgme.AlgorithmCapability PubkeyUsage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.AlgorithmCapability</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The algorithm capabilities of the primary key.</summary>
        <value>A bit-vector <see cref="T:Libgpgme.AlgorithmCapability" />.</value>
        <remarks>
          <block subset="none" type="note">
            <para>
When using OpenPGP, the primary key MUST have the <see cref="F:Libgpgme.AlgorithmCapability.CanSign" /> capability. The <see cref="F:Libgpgme.AlgorithmCapability.CanCert" /> capability will be added automatically.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealName">
      <MemberSignature Language="C#" Value="public string RealName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RealName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The real name.</summary>
        <value>A <see cref="T:System.String" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SubkeyAlgorithm">
      <MemberSignature Language="C#" Value="public Libgpgme.KeyAlgorithm SubkeyAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Libgpgme.KeyAlgorithm SubkeyAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.KeyAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The subkey algorithm.</summary>
        <value>A <see cref="T:Libgpgme.KeyAlgorithm" />.</value>
        <remarks>
          <para>
You can modify the capabilities with the <see cref="P:Libgpgme.KeyParameters.SubkeyUsage" /> property.
</para>
          <block subset="none" type="note">
            <para>
The following public key algorithms are valid for the subkey when creating OpenPGP keys:
  </para>
            <para>
              <list type="table">
                <listheader>
                  <term>Algorithm</term>
                  <description>Description</description>
                </listheader>
                <item>
                  <term>
                    <see cref="F:Libgpgme.KeyAlgorithm.DSA" />
                  </term>
                  <description>DSA</description>
                </item>
                <item>
                  <term>
                    <see cref="F:Libgpgme.KeyAlgorithm.RSA" />
                  </term>
                  <description>RSA</description>
                </item>
                <item>
                  <term>
                    <see cref="F:Libgpgme.KeyAlgorithm.ELG_E" />
                  </term>
                  <description>ELG_E</description>
                </item>
              </list>
            </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubkeyLength">
      <MemberSignature Language="C#" Value="public int SubkeyLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubkeyLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The subkey length in bits.</summary>
        <value>A <see cref="T:System.Int32" />.</value>
        <remarks>
          <para>
You can use the following constant values:
</para>
          <list type="table">
            <listheader>
              <term>Constant</term>
              <description>Description</description>
            </listheader>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_1024" />
              </term>
              <description>for 1024 bits key length</description>
            </item>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_2048" />
              </term>
              <description>for 2048 bits key length</description>
            </item>
            <item>
              <term>
                <see cref="F:Libgpgme.KeyParameters.KEY_LENGTH_4096" />
              </term>
              <description>for 4096 bits key length</description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubkeyUsage">
      <MemberSignature Language="C#" Value="public Libgpgme.AlgorithmCapability SubkeyUsage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Libgpgme.AlgorithmCapability SubkeyUsage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Libgpgme.AlgorithmCapability</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The algorithm capabilities of the subkey.</summary>
        <value>A bit-vector <see cref="T:Libgpgme.AlgorithmCapability" />.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
