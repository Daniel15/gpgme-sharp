<Type Name="PassphraseDelegate" FullName="Libgpgme.PassphraseDelegate">
  <TypeSignature Language="C#" Value="public delegate Libgpgme.PassphraseResult PassphraseDelegate(Context ctx, PassphraseInfo info, ref char[] passphrase);" />
  <AssemblyInfo>
    <AssemblyName>gpgme-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="ctx" Type="Libgpgme.Context" />
    <Parameter Name="info" Type="Libgpgme.PassphraseInfo" />
    <Parameter Name="passphrase" Type="System.Char[]&amp;" RefType="ref" />
  </Parameters>
  <ReturnValue>
    <ReturnType>Libgpgme.PassphraseResult</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="ctx">The context that initiates the passphrase callback.</param>
    <param name="info">A <see cref="C:Libgpgme.PassphraseInfo" /> object that gives an indication for which user ID the passphrase is required.</param>
    <param name="passphrase">The returning passphrase. </param>
    <summary>The type of method that usable as passphrase callback function.</summary>
    <value>Returns a <see cref="T:Libgpgme.PassphraseResult" /> value that indicates success or a user canceled action.</value>
    <remarks>The <see cref="C:Libgpgme.PassphraseInfo" /> object will be <see langword="null" /> in the case of symmetric encryption.

<block subset="none" type="note"><para>
Make sure that you overwrite (wipe) the user's passphrase in memory. You should not use the <see cref="M:System.String.ToArray()" /> method to convert a user supplied string if you do not hold any further reference to it. The callback will NOT wipe the char array after usage.
  </para></block></remarks>
  </Docs>
</Type>
